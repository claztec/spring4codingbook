<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/jms
       http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <context:component-scan base-package="net.claztec.document" />


    <bean id="activemqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory" p:brokerURL="tcp://localhost:61616" />

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg name="connectionFactory" ref="activemqConnectionFactory" />
        <property name="defaultDestinationName" value="mydocumentsQueue" />
    </bean>

    <jms:listener-container connection-factory="activemqConnectionFactory" acknowledge="auto" container-type="default">
        <jms:listener destination="mydocumentsQueue" ref="JMSConsumer" method="onMessage" />
    </jms:listener-container>

    <rabbit:connection-factory id="rabbitConnectionFactory" host="localhost" />
    <rabbit:admin connection-factory="rabbitConnectionFactory" />
    <rabbit:template id="rabbitTemplate" connection-factory="rabbitConnectionFactory" routing-key="mydocumentsQueue" />
    <rabbit:queue name="mydocumentsQueue" />
    <rabbit:listener-container connection-factory="rabbitConnectionFactory">
        <rabbit:listener ref="rabbitmqConsumer" queues="mydocumentsQueue" />
    </rabbit:listener-container>


    <jdbc:embedded-database id="dataSource">
        <jdbc:script location="classpath:META-INF/data/schema.sql" />
        <jdbc:script location="classpath:META-INF/data/data.sql" />
    </jdbc:embedded-database>


    <bean id="sql" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="query">
                    <value>
                        select d.documentId, d.name, d.location, d.description as doc_desc,
                        d.typeId, d.created, d.modified,
                        t.name as type_name, t.description as type_desc, t.extension
                        from documents d
                        join types t
                        on d.typeId = t.typeId
                    </value>
                </entry>
                <entry key="find">
                    <value>
                        select d.documentId, d.name, d.location, d.description as doc_desc,
                        d.typeId, d.created, d.modified,
                        t.name as type_name, t.description as type_desc, t.extension from
                        documents d
                        join types t
                        on d.typeId = t.typeId
                        where d.documentId = ?
                    </value>
                </entry>
                <entry key="insert">
                    <value>
                        insert into documents (documentId,name,location,description, typeId, created, modified)
                        values (?,?,?,?,?,?,?)
                    </value>
                </entry>
                <entry key="update">
                    <value>
                        update documents
                        set name = ?,
                        location = ?,
                        description = ?,
                        typeId = ?,
                        modified = ?
                        where documentId = ?
                    </value>
                </entry>
                <entry key="delete">
                    <value>
                        delete from documents where documentId = ?
                    </value>
                </entry>
            </map>
        </constructor-arg>
    </bean>
</beans>